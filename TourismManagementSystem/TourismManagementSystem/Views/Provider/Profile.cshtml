@model dynamic
@{
    ViewBag.Title = $"{ViewBag.RoleName} Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";

    bool isApproved = ViewBag.IsApproved is bool b && b;

    // completeness
    bool hasName, hasDesc, hasPhone, hasDoc;
    if (ViewBag.IsAgency)
    {
        hasName = !string.IsNullOrWhiteSpace(Model?.AgencyName);
        hasDesc = !string.IsNullOrWhiteSpace(Model?.Description);
        hasPhone = !string.IsNullOrWhiteSpace(Model?.Phone);
        hasDoc = !string.IsNullOrWhiteSpace(Model?.VerificationDocPath);
    }
    else
    {
        hasName = !string.IsNullOrWhiteSpace(Model?.FullNameOnLicense);
        hasDesc = !string.IsNullOrWhiteSpace(Model?.Bio);
        hasPhone = !string.IsNullOrWhiteSpace(Model?.Phone);
        hasDoc = !string.IsNullOrWhiteSpace(Model?.VerificationDocPath);
    }

    int totalReq = 4;
    int filled = (hasName ? 1 : 0) + (hasDesc ? 1 : 0) + (hasPhone ? 1 : 0) + (hasDoc ? 1 : 0);
    int pct = (int)Math.Round(totalReq == 0 ? 0 : (filled * 100.0 / totalReq));

    bool blankAgency = ViewBag.IsAgency &&
                       !isApproved &&
                       !string.IsNullOrWhiteSpace(Model?.User?.FullName) &&
                       string.Equals(Model?.AgencyName, Model?.User?.FullName, StringComparison.OrdinalIgnoreCase);
}

<!-- Header -->
<div class="container-fluid bg-breadcrumb">
    <div class="container text-center py-5" style="max-width:900px;">
        <h3 class="text-white display-3 mb-2">@ViewBag.RoleName Profile</h3>
        <p class="text-white-50 mb-0">
            @(ViewBag.IsAgency
                ? (string.IsNullOrWhiteSpace(Model?.AgencyName) ? "New Agency" : Model.AgencyName)
                : (string.IsNullOrWhiteSpace(Model?.FullNameOnLicense) ? "New Guide" : Model.FullNameOnLicense))
        </p>
    </div>
</div>

<div class="container py-4" style="max-width:900px;">

    @if (TempData["Success"] != null)
    {<div class="alert alert-success">@TempData["Success"]</div>}
    @if (TempData["Info"] != null)
    {<div class="alert alert-info">@TempData["Info"]</div>}
    @if (TempData["Error"] != null)
    {<div class="alert alert-danger">@TempData["Error"]</div>}

    <div class="card shadow-sm rounded-3 mb-4">
        <div class="card-body d-flex flex-wrap align-items-center justify-content-between">
            <div>
                <h5 class="mb-1">Account Status</h5>
                @if (isApproved)
                {
                    <span class="badge bg-success">Approved</span>
                    <small class="text-muted ms-2">You can publish & accept bookings.</small>
                }
                else
                {
                    <span class="badge bg-warning text-dark">Pending Approval</span>
                    <small class="text-muted ms-2">Complete profile and await admin review.</small>
                }
            </div>
            <div class="text-end">
                <div class="small text-muted">Profile completeness: @pct%</div>
                <div class="progress" style="height:8px; width:220px;">
                    <div class="progress-bar" role="progressbar" style="width:@pct%;" aria-valuenow="@pct" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            </div>
        </div>
    </div>

    <h4 class="mb-3">Profile</h4>

    @using (Html.BeginForm("Profile", "Provider", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

        <div class="row">
            <div class="col-md-6 mb-3">
                @Html.Label("OwnerName", "Owner / Contact Person", new { @class = "form-label fw-semibold" })
                @Html.TextBox("OwnerName", (string)(Model?.User?.FullName ?? ""), new { @class = "form-control", placeholder = "Enter owner name" })

                <small class="text-muted">This will also update your account name.</small>
            </div>
        </div>

        @* === Agency fields === *@
        if (ViewBag.IsAgency)
        {
            <div class="row">
                <div class="col-md-6 mb-3">
                    @Html.Label("AgencyName", "Agency Name", new { @class = "form-label fw-semibold" })
                    @Html.TextBox("AgencyName", (string)(Model?.AgencyName ?? ""), new { @class = "form-control", placeholder = "e.g., WanderMore Travels" })

                </div>
            </div>

            <div class="mb-3">
                @Html.Label("Description", "Description", new { @class = "form-label fw-semibold" })
                @Html.TextArea("Description", (string)(Model?.Description ?? ""), 5, 60, new { @class = "form-control", placeholder = "Describe services..." })

            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    @Html.Label("Phone", "Phone", new { @class = "form-label fw-semibold" })
                    
                    @Html.TextBox("Phone", (string)(Model?.Phone ?? ""), new { @class = "form-control", placeholder = "+61 4XX XXX XXX" })

                </div>
                <div class="col-md-6 mb-3">
                    @Html.Label("Website", "Website", new { @class = "form-label fw-semibold" })
                    @Html.TextBox("Website", (string)(Model?.Website ?? ""), new { @class = "form-control", placeholder = "https://example.com" })
                    <small class="text-muted">Optional but recommended.</small>
                </div>
            </div>
        }
        else
        {
            @* === Guide fields === *@
            <div class="row">
                <div class="col-md-6 mb-3">
                    @Html.Label("FullNameOnLicense", "Full Name on License", new { @class = "form-label fw-semibold" })
                    @Html.TextBox("FullNameOnLicense", (string)(Model?.FullNameOnLicense ?? ""), new { @class = "form-control", placeholder = "Guide’s full licensed name" })

                </div>
            </div>

            <div class="mb-3">
                @Html.Label("Bio", "Bio", new { @class = "form-label fw-semibold" })
                @Html.TextArea("Bio", (string)(Model?.Bio ?? ""), 5, 60, new { @class = "form-control", placeholder = "Short introduction..." })

            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    @Html.Label("Phone", "Phone", new { @class = "form-label fw-semibold" })
                    @Html.TextBox("Phone", (string)(Model?.Phone ?? ""), new { @class = "form-control", placeholder = "+61 4XX XXX XXX" })

                </div>
            </div>
        }

<div class="mb-3">
    @Html.Label("VerificationDocPath", "Verification Document URL", new { @class = "form-label fw-semibold" })
    @Html.TextBox("VerificationDocPath", (string)(Model?.VerificationDocPath ?? ""), new { @class = "form-control", placeholder = "Link to license or registration document" })

</div>

        <div class="d-flex flex-wrap gap-2">
            <button class="btn btn-primary" type="submit">
                <i class="fas fa-save me-1"></i> Save Profile
            </button>
            <a class="btn btn-outline-secondary" href="@Url.Action("Dashboard","Provider")">
                <i class="fas fa-tachometer-alt me-1"></i> Back to Dashboard
            </a>
        </div>
    }
</div>

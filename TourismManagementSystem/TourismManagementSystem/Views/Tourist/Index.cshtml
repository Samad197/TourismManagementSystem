@*@model IEnumerable<TourismManagementSystem.Models.ViewModels.PublicPackageListItemVm>

@{
    ViewBag.Title = "Packages";

    // Role awareness only affects Book Now behavior (login gate for non-tourists)
    bool isAuth = User?.Identity?.IsAuthenticated ?? false;
    bool isTourist = isAuth && User.IsInRole("Tourist");

    Func<int, string> detailsUrl = id => Url.Action("Details", "PublicPackage", new { id });
    Func<int, string> bookEntryUrl = id =>
        isTourist
            ? detailsUrl(id) // go to details to pick a session
            : Url.Action("Login", "Account", new { returnUrl = detailsUrl(id) });

    // Tiny helpers
    Func<string, string> money = val => val; // using ToString("C") below
    string FallbackImg(string path) => string.IsNullOrWhiteSpace(path)
        ? Url.Content("~/Content/img/packages-1.jpg")
        : Url.Content(path);
}*@

@model IEnumerable<TourismManagementSystem.Models.ViewModels.PublicPackageListItemVm>

@{
    ViewBag.Title = "Packages";

    bool isAuth = User?.Identity?.IsAuthenticated ?? false;
    bool isTourist = isAuth && User.IsInRole("Tourist");

    // Use tourist routes when logged-in tourist, otherwise public actions
    Func<int, string> detailsUrl = id => isTourist
        ? Url.RouteUrl("TouristPackageDetails", new { id })
        : Url.Action("Details", "PublicPackage", new { id });

    Func<int, string> bookEntryUrl = id => isTourist
        ? Url.RouteUrl("TouristPackageBook", new { packageId = id })
        : Url.Action("Login", "Account", new { returnUrl = Url.Action("Details", "PublicPackage", new { id }) });

    // Safe fallback image
    Func<string, string> FallbackImg = path =>
        string.IsNullOrWhiteSpace(path)
            ? Url.Content("~/Content/img/packages-1.jpg")
            : Url.Content(path);
}


<style>
    /* --- Card & image layout to match template --- */
    .packages-item {
        height: 100%;
    }

    .packages-img {
        position: relative;
        overflow: hidden;
        border-top-left-radius: .5rem;
        border-top-right-radius: .5rem;
        height: 260px; /* desktop */
    }

    media (max-width: 991.98px) {
        .packages-img

    {
        height: 220px;
    }

    }

    media (max-width: 575.98px) {
        .packages-img

    {
        height: 200px;
    }

    }

    .packages-img > img {
        width: 100%;
        height: 100%;
        object-fit: cover; /* keeps image nicely cropped like the template */
        display: block;
    }

    .packages-info {
        bottom: 0;
        left: 0;
        right: 0;
        background: rgba(255,255,255,.85); /* readable overlay; tweak if you want darker */
        backdrop-filter: saturate(140%) blur(2px);
        font-size: .85rem;
    }

    .packages-price {
        position: absolute;
        top: 12px;
        left: 12px;
        background: #0d6efd; /* Bootstrap primary */
        color: #fff;
        font-weight: 700;
        border-radius: .375rem;
        line-height: 1;
    }

    .packages-content {
        display: flex;
        flex-direction: column;
        min-height: 240px; /* keeps card height consistent under the image */
        border-bottom-left-radius: .5rem;
        border-bottom-right-radius: .5rem;
    }

        .packages-content .actions-bar {
            margin-top: auto; /* pins the buttons to the bottom like the template */
        }

    /* Optional: star colors if you add ratings later */
    .star {
        color: #0d6efd;
    }

    .star-muted {
        color: #ced4da;
    }
</style>



<!-- Header Start -->
<div class="container-fluid bg-breadcrumb">
    <div class="container text-center py-5" style="max-width: 900px;">
        <h3 class="text-white display-3 mb-4">Packages</h3>
        <ol class="breadcrumb justify-content-center mb-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
            <li class="breadcrumb-item active text-white">Packages</li>
        </ol>
    </div>
</div>
<!-- Header End -->
<!-- Packages Start -->
<div class="container-fluid packages py-5">
    <div class="container py-5">
        <div class="mx-auto text-center mb-5" style="max-width: 900px;">
            <h5 class="section-title px-3">Packages</h5>
            <h1 class="mb-0">Awesome Packages</h1>
        </div>

        @if (Model == null || !Model.Any())
        {
            <div class="alert alert-warning text-center">No packages are available right now. Please check back soon.</div>
        }
        else
        {
            <div class="packages-carousel owl-carousel">
                @foreach (var pkg in Model)
                {
                    var img = FallbackImg(pkg.ThumbnailPath);

                    <div class="packages-item">
                        <div class="packages-img">
                            <img src="@img" alt="@pkg.Title" class="img-fluid w-100 rounded-top" />

                            <div class="packages-info d-flex border border-start-0 border-end-0 position-absolute">
                                <small class="flex-fill text-center border-end py-2">
                                    <i class="fa fa-user-tie me-2"></i>@pkg.OwnerName (@pkg.OwnerType)
                                </small>
                                <small class="flex-fill text-center border-end py-2">
                                    <i class="fa fa-calendar-alt me-2"></i>@pkg.DurationDays day@(pkg.DurationDays == 1 ? "" : "s")
                                </small>
                                <small class="flex-fill text-center py-2">
                                    <i class="fa fa-user me-2"></i>@pkg.MaxGroupSize Person@(pkg.MaxGroupSize == 1 ? "" : "s")
                                </small>
                            </div>

                            <div class="packages-price py-2 px-3">
                                @pkg.Price.ToString("C")
                            </div>
                        </div>

                        <div class="packages-content bg-light">
                            <div class="p-4 pb-0">
                                <h5 class="mb-0">@pkg.Title</h5>
                                <small class="text-uppercase">
                                    @(pkg.HasUpcoming ? "Upcoming Sessions Available" : "No Upcoming Sessions")
                                </small>

                                @* Optional: ratings if you have AvgRating (0–5)
                                    <div class="mb-3 mt-2">
                                        @{
                                            // var full = (int)Math.Round(pkg.AvgRating ?? 0);
                                            // for (int i = 0; i < 5; i++)
                                            // { <small class="fa fa-star @(i < full ? "star" : "star-muted")"></small> }
                                        }
                                    </div>
                                *@

                                <p class="mb-4 mt-2 small text-muted">
                                    Managed by <strong>@pkg.OwnerName</strong>.
                                    Capacity up to <strong>@pkg.MaxGroupSize</strong> guests.
                                </p>
                            </div>

                            <div class="actions-bar row bg-primary rounded-bottom mx-0">
                                <div class="col-6 text-start px-0">
                                    <a href="@detailsUrl(pkg.PackageId)" class="btn-hover btn text-white py-2 px-4">Read More</a>
                                </div>
                                <div class="col-6 text-end px-0">
                                    <a href="@bookEntryUrl(pkg.PackageId)" class="btn-hover btn text-white py-2 px-4">Book Now</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>
<!-- Packages End -->


@section scripts {
    <!-- Ensure OwlCarousel is initialized. If your main.js already does this, you can remove the block below. -->
    <script>
        (function () {
            var $carousel = $('.packages-carousel');
            if ($carousel.length && !$carousel.hasClass('owl-loaded')) {
                $carousel.owlCarousel({
                    autoplay: true,
                    smartSpeed: 800,
                    margin: 25,
                    dots: true,
                    loop: true,
                    nav: true,
                    navText: [
                        '<i class="fa fa-chevron-left"></i>',
                        '<i class="fa fa-chevron-right"></i>'
                    ],
                    responsive: {
                        0: { items: 1 },
                        576: { items: 1 },
                        768: { items: 2 },
                        992: { items: 3 }
                    }
                });
            }
        })();
    </script>
}

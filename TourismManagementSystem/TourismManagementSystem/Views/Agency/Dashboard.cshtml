@model TourismManagementSystem.Models.ViewModels.AgencyDashboardVm
@{
    ViewBag.Title = "Agency Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* ensure consistent vertical middle alignment */
    #tblSessions th, #tblSessions td,
    #tblBookings th, #tblBookings td {
        vertical-align: middle !important;
    }
</style>

<div class="container-fluid bg-breadcrumb">
    <div class="container text-center py-5" style="max-width:900px;">
        <h3 class="text-white display-3 mb-2">Agency Dashboard</h3>

        <p class="text-white-50 mb-0">Welcome, @Model.AgencyName</p>
    </div>
</div>

<div class="container py-4">

    <!-- Hidden anti-forgery token for secure AJAX -->
    <form id="afTokenHolder" style="display:none;">
        @Html.AntiForgeryToken()
    </form>

    @if (TempData["Success"] != null)
    {<div class="alert alert-success">@TempData["Success"]</div>}
    @if (TempData["Error"] != null)
    {<div class="alert alert-danger">@TempData["Error"]</div>}

    <!-- KPI Cards -->
<div class="row g-3 mb-3">
    <div class="col-md-2">
        <div class="card shadow-sm text-center p-3">
            <div class="fw-bold">Packages</div>
            <div class="display-6">@Model.TotalPackages</div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card shadow-sm text-center p-3">
            <div class="fw-bold">Upcoming</div>
            <div class="display-6">@Model.UpcomingSessions</div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card shadow-sm text-center p-3">
            <div class="fw-bold">Bookings</div>
            <div class="display-6">@Model.TotalBookings</div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card shadow-sm text-center p-3">
            <div class="fw-bold">Paid Revenue</div>
            <div class="h4" id="kpiPaidRevenue">
                @Model.PaidRevenue.ToString("C", new System.Globalization.CultureInfo("en-AU"))
            </div>
        </div>
    </div>

    <div class="col-md-3">
        <div class="card shadow-sm text-center p-3">
            <div class="fw-bold">Pending Payments</div>
            <div class="display-6" id="kpiPendingPayments">@Model.PendingPayments</div>
        </div>
    </div>
</div>

    <!-- Quick Actions -->
    <div class="mb-4 d-flex flex-wrap gap-2">
        <a href="@Url.Action("Create","Package")" class="btn btn-primary"><i class="fas fa-plus me-1"></i> Create Package</a>
        <a href="@Url.Action("Index","Package")" class="btn btn-outline-secondary"><i class="fas fa-archive me-1"></i> My Packages</a>
        <a href="@Url.Action("Sessions","Agency")" class="btn btn-outline-secondary"><i class="far fa-calendar-alt me-1"></i> Sessions</a>
    </div>

    <div class="row g-4">
        <!-- Upcoming Sessions -->
        <!-- Upcoming Sessions -->
        <div class="col-lg-6">
            <div class="card shadow-sm rounded-3">
                <div class="card-header bg-light fw-bold d-flex align-items-center justify-content-between">
                    <span>Upcoming Sessions</span>
                </div>

                <div class="card-body p-0">
                    @if (Model.NextSessions == null || !Model.NextSessions.Any())
                    {
                        <div class="p-3 text-muted">No upcoming sessions.</div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table id="tblSessions" class="table table-striped table-hover align-middle">
                                <thead class="table-light">
                                    <tr>
                                        <th>Package</th>
                                        <th>Start</th>
                                        <th class="text-center">Capacity</th>
                                        <th class="text-center">Booked</th>
                                        <th class="text-center">Available</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var s in Model.NextSessions)
                                    {
                                        var available = Math.Max(0, s.Capacity - s.Booked);
                                        <tr>
                                            <td>@s.PackageTitle</td>
                                            <td>@s.StartDate.ToString("yyyy-MM-dd HH:mm")</td>
                                            <td class="text-center">@s.Capacity</td>
                                            <td class="text-center">@s.Booked</td>
                                            <td class="text-center">@available</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>


        <!-- Recent Bookings -->
        <div class="col-lg-6">
            <div class="card shadow-sm rounded-3">
                <div class="card-header bg-light fw-bold d-flex align-items-center justify-content-between">
                    <span>Recent Bookings</span>
                </div>

                <div class="card-body p-0">
                    @if (Model.RecentBookings == null || !Model.RecentBookings.Any())
                    {
                        <div class="p-3 text-muted">No bookings yet.</div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover align-middle js-recent-bookings" id="tblDashboardBookings">
                                <thead class="table-light">
                                    <tr>
                                        <th>Customer</th>
                                        <th>Package</th>
                                        <th>Date</th>
                                        <th class="text-center">Participants</th>
                                        <th class="text-center">Payment</th>
                                        @*<th class="text-end">Amount</th>*@
                                        <th class="text-center">Status</th>
                                        <th class="text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var b in Model.RecentBookings)
                                    {
                                        var ps = string.IsNullOrWhiteSpace(b.PaymentStatus) ? "Pending" : b.PaymentStatus;

                                        <tr>
                                            <td>@b.CustomerName</td>
                                            <td>@b.PackageTitle</td>
                                            <td>@b.StartDate.ToString("yyyy-MM-dd")</td>
                                            <td class="text-center">@b.Participants</td>

                                            <!-- Payment badge -->
                                            <td class="text-center">
                                                <span class="badge payment-badge @(ps.Equals("Paid", StringComparison.OrdinalIgnoreCase) ? "bg-success"
        : ps.Equals("Pending", StringComparison.OrdinalIgnoreCase) ? "bg-secondary"
        : "bg-warning text-dark")"
                                                      data-bookingid="@b.BookingId"
                                                      data-status="@ps">
                                                    @ps
                                                </span>
                                            </td>


                                            @*<td class="text-end">
                                                @b.Amount.ToString("C", new System.Globalization.CultureInfo("en-AU"))
                                            </td>*@


                                            <!-- Approval status -->
                                            <td class="text-center approval-col">
                                                @if (b.IsApproved == null)
                                                {<span class="badge bg-warning text-dark">Pending</span> }
                                                else if (b.IsApproved == true)
                                                { <span class="badge bg-success">Approved</span> }
                                                else
                                                { <span class="badge bg-danger">Rejected</span>}
                                            </td>

                                            <!-- Actions -->
                                            <td class="text-center">
                                                <div class="d-inline-flex gap-2 flex-wrap justify-content-center">
                                                    @if (b.IsApproved == null)
                                                    {
                                                        <button type="button" class="btn btn-success btn-sm approve-btn"
                                                                data-bookingid="@b.BookingId">
                                                            <i class="fas fa-check me-1"></i> Approve
                                                        </button>
                                                        <button type="button" class="btn btn-outline-danger btn-sm reject-btn"
                                                                data-bookingid="@b.BookingId">
                                                            <i class="fas fa-times me-1"></i> Reject
                                                        </button>
                                                    }
                                                    else if (b.IsApproved == true)
                                                    {
                                                        if (!ps.Equals("Paid", StringComparison.OrdinalIgnoreCase))
                                                        {
                                                            <button type="button"
                                                                    class="btn btn-success btn-sm payment-toggle-btn"
                                                                    data-bookingid="@b.BookingId" data-current="@ps">
                                                                <i class="fas fa-check-circle me-1"></i> Mark as Paid
                                                            </button>
                                                        }
                                                        else
                                                        {
                                                            <button type="button"
                                                                    class="btn btn-outline-secondary btn-sm payment-toggle-btn"
                                                                    data-bookingid="@b.BookingId" data-current="@ps">
                                                                <i class="far fa-clock me-1"></i> Set Pending
                                                            </button>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted small">No actions</span>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                    }
                </div>
            </div>
        </div>



        <!-- Recent Feedback (kept simple; add pager if you want) -->
        <div class="col-lg-12">
            <div class="card shadow-sm rounded-3">
                <div class="card-header bg-light fw-bold">Recent Feedback</div>
                <div class="card-body p-0">
                    @if (Model.RecentFeedback == null || !Model.RecentFeedback.Any())
                    {
                        <div class="p-3 text-muted">No feedback yet.</div>
                    }
                    else
                    {
                        <table class="table table-striped mb-0">
                            <thead>
                                <tr>
                                    <th>Package</th>
                                    <th>Rating</th>
                                    <th>Comment</th>
                                    <th>Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var f in Model.RecentFeedback)
                                {
                                    <tr>
                                        <td>@f.PackageTitle</td>
                                        <td>@f.Rating</td>
                                        <td>@f.Comment</td>
                                        <td>@f.CreatedAt.ToString("yyyy-MM-dd")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Approve / Reject Booking Modal -->
<div class="modal fade" id="bookingDecisionModal" tabindex="-1" aria-labelledby="bookingDecisionLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            @using (Html.BeginForm("ApproveBooking", "Provider", FormMethod.Post, new { id = "bookingDecisionForm" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="bookingDecisionLabel">Confirm Action</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    @Html.Hidden("bookingId", "", new { id = "bookingIdField" })
                    <p class="mb-0">
                        Are you sure you want to <strong id="bookingVerb">approve</strong> this booking for
                        <span class="fw-semibold" id="bookingCustomer"></span>
                        (<span class="fw-semibold" id="bookingPackage"></span>)?
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn" id="bookingSubmitBtn">Yes, proceed</button>
                </div>
            }
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css" />
    <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js"></script>

    <script>
        $(function () {
            $('.js-recent-bookings').each(function () {
                if ($.fn.DataTable.isDataTable(this)) {
                    $(this).DataTable().clear().destroy();
                }
                $(this).DataTable({
                    pageLength: 5, // Show fewer by default on dashboard
                    lengthMenu: [5, 10, 20],
                    ordering: true,
                    responsive: true,
                    language: {
                        search: "Search:",
                        lengthMenu: "Show _MENU_ bookings",
                        info: "Showing _START_ to _END_ of _TOTAL_ bookings"
                    }
                });
            });
        });

(function(){

  // Anti-forgery token helper
  function getAfToken(){
    var el=document.querySelector('#afTokenHolder input[name="__RequestVerificationToken"]');
    return el?el.value:'';
  }

  async function toggleBooking(btn, actionUrl, type){
    const bookingId = btn.getAttribute('data-bookingid');
    const row = btn.closest('tr');
    if (!row) return;

    const originalHTML = btn.innerHTML;
    btn.disabled = true;
    btn.innerHTML = '<span class="spinner-border spinner-border-sm me-1"></span> Updating…';

    try{
      const body = new URLSearchParams({
        bookingId: bookingId,
        __RequestVerificationToken: getAfToken()
      }).toString();

      const res = await fetch(actionUrl, {
        method:'POST',
        credentials:'same-origin',
        headers:{
          'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8',
          'X-Requested-With':'XMLHttpRequest'
        },
        body
      });

      const data = await res.json();
      if(!data.ok){ alert(data.error||'Update failed'); return; }

      // ===== Approval =====
      if(type==="approval"){
        const approvalCell = row.querySelector('.approval-col');
        if(approvalCell){
          approvalCell.innerHTML =
            data.status==="Approved"
              ? '<span class="badge bg-success">Approved</span>'
              : '<span class="badge bg-danger">Rejected</span>';
        }
        const actionsCell = row.querySelector('td:last-child');
        if(actionsCell){
          if(data.status==="Approved"){
            actionsCell.innerHTML =
              `<button type="button" class="btn btn-success btn-sm payment-toggle-btn"
                       data-bookingid="${bookingId}" data-current="Pending">
                 <i class="fas fa-check-circle me-1"></i> Mark as Paid
               </button>`;
          }else{
            actionsCell.innerHTML = '<span class="text-muted small">No actions</span>';
          }
        }
      }

      // ===== Payment =====
      if(type==="payment"){
        const badge = row.querySelector('.payment-badge[data-bookingid="'+bookingId+'"]');
        const newStatus = (data.status||'Pending').trim();
        if(badge){
          badge.textContent = newStatus;
          badge.setAttribute('data-status', newStatus);
          badge.className = 'badge payment-badge '+(newStatus==="Paid"?"bg-success":"bg-secondary");
        }
        if(newStatus==="Paid"){
          btn.className='btn btn-outline-secondary btn-sm payment-toggle-btn';
          btn.innerHTML='<i class="far fa-clock me-1"></i> Set Pending';
        }else{
          btn.className='btn btn-success btn-sm payment-toggle-btn';
          btn.innerHTML='<i class="fas fa-check-circle me-1"></i> Mark as Paid';
        }
      }

    }catch(err){
      console.error(err);
      alert('Network error.');
    }finally{
      btn.disabled=false;
      if(!btn.innerHTML || btn.innerHTML.indexOf('Updating')!==-1){
        btn.innerHTML=originalHTML;
      }
    }
  }

  // Global click handler
  document.addEventListener('click', function(e){
    const approveBtn = e.target.closest('.approve-btn');
    const rejectBtn = e.target.closest('.reject-btn');
    const payBtn    = e.target.closest('.payment-toggle-btn');

    if(approveBtn){
      e.preventDefault();
      toggleBooking(approveBtn,'@Url.Action("ApproveBooking", "Provider")',"approval");
    }
    if(rejectBtn){
      e.preventDefault();
      toggleBooking(rejectBtn,'@Url.Action("RejectBooking", "Provider")',"approval");
    }
    if(payBtn){
      e.preventDefault();
      toggleBooking(payBtn,'@Url.Action("TogglePayment", "Provider")',"payment");
    }
  });

})();
    </script>
}

